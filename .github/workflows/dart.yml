name: Build To Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Release new apk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
          
      - name: Generate unique version tag
        id: generate-tag
        run: |
          # Get current timestamp in YY.MM.DD format
          timestamp=$(date +'%y.%m.%d')
          
          # Get the latest tag, default to v0.0.0 if no tags exist
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          
          # Extract version numbers (only take the part before any hyphen)
          version=$(echo $latest_tag | sed 's/v//' | cut -d'-' -f1)
          IFS='.' read -ra VERSION_PARTS <<< "$version"
          major=${VERSION_PARTS[0]:-0}
          minor=${VERSION_PARTS[1]:-0}
          patch=${VERSION_PARTS[2]:-0}
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          
          # Combine version with timestamp for tag
          new_tag="v$new_version-$timestamp"
          
          # Export variables
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV
          echo "NEW_VERSION=$new_version+$timestamp" >> $GITHUB_ENV
          echo "New tag will be: $new_tag"
          echo "New version will be: $new_version+$timestamp"

      - name: Update version in pubspec.yaml
        run: |
          sed -i "s/^version: .*/version: ${{ env.NEW_VERSION }}/" pubspec.yaml
          cat pubspec.yaml | grep version:

      - uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter pub get
      - run: flutter build apk --release

      - name: Create Changelog
        id: changelog
        run: |
          echo "Creating changelog..."
          echo "## Changelog" > CHANGELOG.md
          git log $(git describe --tags --abbrev=0 @^)..HEAD --pretty=format:"%h %s" >> CHANGELOG.md
          echo "Changelog created."      

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*"
          tag: ${{ env.NEW_TAG }}
          bodyFile: CHANGELOG.md
          token: ${{ secrets.TOKEN }}
